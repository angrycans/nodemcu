
#include "Wire.h"
#include "Arduino.h"
#include "FT5206.h"

#define LED_RUN 1

#define CTP_INT 45
#define CTP_SDA 47
#define CTP_SCL 48

uint8_t registers[FT5206_REGISTERS];
uint16_t new_coordinates[5][2];
uint16_t old_coordinates[5][2];
uint8_t current_touches = 0;
uint8_t old_touches = 0;

FT5206 cts = FT5206(CTP_INT);

void setup(void)
{
  // SPIバスとパネルの初期化を実行すると使用可能になります。

  Serial.begin(115200);
  delay(1000);
  Serial.println("test tft lvgl");

  pinMode(LED_RUN, OUTPUT);

  // touchpad_init();

  Wire.begin(CTP_SDA, CTP_SCL);
  cts.begin(SAFE);
}

void loop(void)
{

  digitalWrite(LED_RUN, (millis() / 1000) % 2);

  cts.setTouchLimit(1); // from 1 to 5
  if (cts.touched())
  {
    /*
    In SAFE mode the interrupt it's has been disabled
    from exact this point so you are safe to do your stuff without risk that another
    touch causes an interrupt and exit the following calculations.
    You NEED to rearm interrupt manually by using rearmISR (when it's safe for you).
    */
    uint8_t i;
    uint16_t x, y;
    cts.getTSregisters(registers);
    current_touches = cts.getTScoordinates(new_coordinates, registers);
    if (current_touches < 1)
      return;

    for (i = 1; i <= current_touches; i++)
    { // mark touches on screen
      x = new_coordinates[i - 1][0];
      y = new_coordinates[i - 1][1];

      Serial.printf("X:%d Y:%d\n", x, y);
      old_coordinates[i - 1][0] = x;
      old_coordinates[i - 1][1] = y;
    }
    old_touches = current_touches;
    /*
    Here we rearm the interrupt
    */
    cts.rearmISR();
  }
}
